{"ast":null,"code":"var _jsxFileName = \"/Users/zoegong/NEU/CS5610 Web Dev/5610-project3/frontend-1/twitter/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport './index.css';\nimport React, { useState } from 'react';\nimport { SignupPage, LoginPage } from './components/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState('login');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const handleLoginSuccess = userData => {\n    setIsAuthenticated(true);\n    setUser(userData);\n    // Here you could redirect to a dashboard or home page\n    console.log('Logged in successfully:', userData);\n  };\n  const handleSignupSuccess = userData => {\n    // After successful signup, switch to login page\n    setCurrentPage('login');\n    console.log('Signup successful:', userData);\n  };\n  const handleLogout = async () => {\n    try {\n      const response = await fetch('/auth/logout', {\n        method: 'POST'\n      });\n      if (response.ok) {\n        setIsAuthenticated(false);\n        setUser(null);\n      }\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n\n  // If user is authenticated, show a simple logout button\n  if (isAuthenticated && user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: [\"Welcome, \", user.username, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show either login or signup page\n  return currentPage === 'login' ? /*#__PURE__*/_jsxDEV(LoginPage, {\n    onSignupClick: () => setCurrentPage('signup'),\n    onLoginSuccess: handleLoginSuccess\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(SignupPage, {\n    onLoginClick: () => setCurrentPage('login'),\n    onSignupSuccess: handleSignupSuccess\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7P6O6tWpxvW5nho3/vof47RTzRU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","SignupPage","LoginPage","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","isAuthenticated","setIsAuthenticated","user","setUser","handleLoginSuccess","userData","console","log","handleSignupSuccess","handleLogout","response","fetch","method","ok","error","className","children","username","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSignupClick","onLoginSuccess","onLoginClick","onSignupSuccess","_c","$RefreshReg$"],"sources":["/Users/zoegong/NEU/CS5610 Web Dev/5610-project3/frontend-1/twitter/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport './index.css';\n\nimport React, { useState } from 'react';\nimport { SignupPage, LoginPage } from './components/auth';\n\nconst App = () => {\n  const [currentPage, setCurrentPage] = useState('login');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n\n  const handleLoginSuccess = (userData) => {\n    setIsAuthenticated(true);\n    setUser(userData);\n    // Here you could redirect to a dashboard or home page\n    console.log('Logged in successfully:', userData);\n  };\n\n  const handleSignupSuccess = (userData) => {\n    // After successful signup, switch to login page\n    setCurrentPage('login');\n    console.log('Signup successful:', userData);\n  };\n\n  const handleLogout = async () => {\n    try {\n      const response = await fetch('/auth/logout', {\n        method: 'POST',\n      });\n\n      if (response.ok) {\n        setIsAuthenticated(false);\n        setUser(null);\n      }\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n\n  // If user is authenticated, show a simple logout button\n  if (isAuthenticated && user) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold mb-4\">Welcome, {user.username}!</h1>\n          <button\n            onClick={handleLogout}\n            className=\"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600\"\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Show either login or signup page\n  return currentPage === 'login' ? (\n    <LoginPage \n      onSignupClick={() => setCurrentPage('signup')}\n      onLoginSuccess={handleLoginSuccess}\n    />\n  ) : (\n    <SignupPage\n      onLoginClick={() => setCurrentPage('login')}\n      onSignupSuccess={handleSignupSuccess}\n    />\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}